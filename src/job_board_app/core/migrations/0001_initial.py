# Generated by Django 4.2.3 on 2023-10-09 12:32

import core.models.company
import core.models.vacancy
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'business_areas',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('staff', models.PositiveIntegerField(default=0)),
                (
                    'business_area',
                    models.ManyToManyField(
                        db_table='company_business_areas',
                        related_name='companies',
                        related_query_name='company',
                        to='core.businessarea',
                    ),
                ),
            ],
            options={
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='EmploymentFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'employment_formats',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='LanguageLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'language_levels',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'levels',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'positions',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone', models.CharField(max_length=30)),
                ('age', models.PositiveSmallIntegerField()),
                ('photo_link', models.CharField(blank=True, max_length=100, unique=True)),
                ('summary_link', models.CharField(max_length=100, unique=True)),
                ('experience_description', models.CharField(max_length=800)),
                ('linkedin_link', models.CharField(blank=True, max_length=100)),
                ('github_link', models.CharField(blank=True, max_length=100)),
                ('work_experience', models.IntegerField(blank=True)),
                ('min_salary', models.PositiveIntegerField(null=True)),
                ('max_salary', models.PositiveIntegerField(null=True)),
                (
                    'city',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='users_profiles',
                        related_query_name='users_profile',
                        to='core.city',
                    ),
                ),
                (
                    'employment_format',
                    models.ManyToManyField(
                        db_table='users_employment_formats',
                        related_name='users',
                        related_query_name='user',
                        to='core.employmentformat',
                    ),
                ),
                (
                    'level',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='users_profiles',
                        related_query_name='users_profile',
                        to='core.level',
                    ),
                ),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='ResponseStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'response_statuses',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='WorkFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'work_formats',
            },
        ),
        migrations.CreateModel(
            name='WorkStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'work_statuses',
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('experience', models.CharField(max_length=30)),
                ('min_salary', models.PositiveIntegerField(null=True)),
                ('max_salary', models.PositiveIntegerField(null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField()),
                ('attachment', models.FileField(null=True, upload_to=core.models.vacancy.vacancy_directory_path)),
                ('city', models.ManyToManyField(db_table='vacancy_cities', related_name='vacancies', to='core.city')),
                (
                    'company',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='vacancies',
                        related_query_name='vacancy',
                        to='core.company',
                    ),
                ),
                (
                    'employment_format',
                    models.ManyToManyField(
                        db_table='vacancy_employment_formats', related_name='vacancies', to='core.employmentformat'
                    ),
                ),
                (
                    'level',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='vacancies',
                        related_query_name='vacancy',
                        to='core.level',
                    ),
                ),
                ('tags', models.ManyToManyField(db_table='vacancies_tags', related_name='vacancies', to='core.tag')),
                (
                    'work_format',
                    models.ManyToManyField(
                        db_table='vacancy_work_formats', related_name='vacancies', to='core.workformat'
                    ),
                ),
            ],
            options={
                'db_table': 'vacancies',
            },
        ),
        migrations.CreateModel(
            name='UsersLanguages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'language',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='users_languages',
                        related_query_name='users_language',
                        to='core.language',
                    ),
                ),
                (
                    'language_level',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='users_languages',
                        related_query_name='users_language',
                        to='core.languagelevel',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='users_languages',
                        related_query_name='users_language',
                        to='core.profile',
                    ),
                ),
            ],
            options={
                'db_table': 'users_languages',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.CharField(max_length=800)),
                ('likes_counter', models.PositiveIntegerField(default=0)),
                ('dislike_counter', models.PositiveIntegerField(default=0)),
                (
                    'company',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='reviews',
                        related_query_name='review',
                        to='core.company',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='reviews',
                        related_query_name='review',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cover_note', models.CharField(max_length=500)),
                ('summary_link', models.CharField()),
                ('user_phone', models.CharField(max_length=30)),
                (
                    'response_status',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='responses',
                        related_query_name='response',
                        to='core.responsestatus',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='responses',
                        related_query_name='response',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'vacancy',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='responses',
                        related_query_name='response',
                        to='core.vacancy',
                    ),
                ),
            ],
            options={
                'db_table': 'responses',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='tags',
            field=models.ManyToManyField(
                db_table='users_tags', related_name='users', related_query_name='user', to='core.tag'
            ),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='users',
                related_query_name='user',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='profile',
            name='user_language',
            field=models.ManyToManyField(through='core.UsersLanguages', to='core.language'),
        ),
        migrations.AddField(
            model_name='profile',
            name='work_format',
            field=models.ManyToManyField(
                db_table='users_work_formats', related_name='users', related_query_name='user', to='core.workformat'
            ),
        ),
        migrations.AddField(
            model_name='profile',
            name='work_status',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='users',
                related_query_name='user',
                to='core.workstatus',
            ),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=50)),
                ('photo_link', models.CharField(blank=True)),
                (
                    'city',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='employees',
                        related_query_name='employee',
                        to='core.city',
                    ),
                ),
                (
                    'company',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='employees',
                        related_query_name='employee',
                        to='core.company',
                    ),
                ),
                (
                    'position',
                    models.ManyToManyField(db_table='employee_positions', related_name='employees', to='core.position'),
                ),
            ],
            options={
                'db_table': 'employees',
            },
        ),
        migrations.CreateModel(
            name='EmailConfirmationCodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=100, unique=True)),
                ('expiration', models.PositiveIntegerField()),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='confirmation_codes',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'db_table': 'email_confirmation_codes',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='cities',
                related_query_name='city',
                to='core.country',
            ),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('street_name', models.CharField(max_length=30)),
                ('home_number', models.PositiveSmallIntegerField()),
                ('office_number', models.PositiveSmallIntegerField()),
                (
                    'city',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='addresses',
                        related_query_name='address',
                        to='core.city',
                    ),
                ),
            ],
            options={
                'db_table': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('logo', models.ImageField(null=True, upload_to=core.models.company.company_directory_path)),
                ('email', models.EmailField(max_length=254)),
                ('founding_year', models.PositiveSmallIntegerField()),
                ('description', models.CharField(max_length=800)),
                ('phone', models.CharField(max_length=30)),
                ('website_link', models.CharField(max_length=100)),
                ('linkedin_link', models.CharField(max_length=100, null=True)),
                ('github_link', models.CharField(max_length=100, null=True)),
                ('twitter_link', models.CharField(max_length=100, null=True)),
                (
                    'company',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name='company_profiles',
                        related_query_name='company_profile',
                        serialize=False,
                        to='core.company',
                    ),
                ),
                (
                    'address',
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='company_profiles',
                        related_query_name='company_profile',
                        to='core.address',
                    ),
                ),
            ],
            options={
                'db_table': 'company_profiles',
            },
        ),
    ]
